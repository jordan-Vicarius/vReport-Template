-- Vulnerability Severity Summary
-- Aggregated vulnerability counts by severity level and status
WITH severity_categories AS (
    SELECT 
        CASE 
            WHEN vulnerability_v3_base_score >= 9.0 THEN 'Critical (9.0-10.0)'
            WHEN vulnerability_v3_base_score >= 7.0 THEN 'High (7.0-8.9)'
            WHEN vulnerability_v3_base_score >= 4.0 THEN 'Medium (4.0-6.9)'
            WHEN vulnerability_v3_base_score > 0 THEN 'Low (0.1-3.9)'
            ELSE 'Unknown (0.0)'
        END as severity_category,
        vulnerability_v3_base_score,
        event_type
    FROM incident_view
    WHERE h_created_at IS NOT NULL
),
current_active AS (
    SELECT 
        CASE 
            WHEN vulnerability_v3_base_score >= 9.0 THEN 'Critical (9.0-10.0)'
            WHEN vulnerability_v3_base_score >= 7.0 THEN 'High (7.0-8.9)'
            WHEN vulnerability_v3_base_score >= 4.0 THEN 'Medium (4.0-6.9)'
            WHEN vulnerability_v3_base_score > 0 THEN 'Low (0.1-3.9)'
            ELSE 'Unknown (0.0)'
        END as severity_category,
        COUNT(*) as active_count
    FROM activevulnerabilities av
    JOIN endpoints e ON av.endpoint_id = e.endpoint_id
    WHERE e.alive = true
    GROUP BY 
        CASE 
            WHEN vulnerability_v3_base_score >= 9.0 THEN 'Critical (9.0-10.0)'
            WHEN vulnerability_v3_base_score >= 7.0 THEN 'High (7.0-8.9)'
            WHEN vulnerability_v3_base_score >= 4.0 THEN 'Medium (4.0-6.9)'
            WHEN vulnerability_v3_base_score > 0 THEN 'Low (0.1-3.9)'
            ELSE 'Unknown (0.0)'
        END
)
SELECT 
    sc.severity_category,
    COUNT(CASE WHEN sc.event_type = 'DetectedActive' THEN 1 END) as detected_count,
    COUNT(CASE WHEN sc.event_type = 'MitigatedVulnerability' THEN 1 END) as mitigated_count,
    COALESCE(ca.active_count, 0) as active_count,
    AVG(sc.vulnerability_v3_base_score) as avg_cvss_score,
    MAX(sc.vulnerability_v3_base_score) as max_cvss_score,
    MIN(sc.vulnerability_v3_base_score) as min_cvss_score
FROM severity_categories sc
LEFT JOIN current_active ca ON sc.severity_category = ca.severity_category
GROUP BY sc.severity_category, ca.active_count
ORDER BY 
    CASE sc.severity_category
        WHEN 'Critical (9.0-10.0)' THEN 1
        WHEN 'High (7.0-8.9)' THEN 2
        WHEN 'Medium (4.0-6.9)' THEN 3
        WHEN 'Low (0.1-3.9)' THEN 4
        ELSE 5
    END;
